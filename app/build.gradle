apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def config = rootProject.ext

android {

    compileSdkVersion config.targetsdkVersion

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minsdkVersion
        targetSdkVersion config.targetsdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
//        ndk {
//            //设置支持的SO库架构
//            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//        }
    }

    signingConfigs {
        release {
            storeFile new File(RELEASE_STOREFILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    sourceSets {

        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []    //disable automatic ndk-build

        }

    }

    android.applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all {
                def fileName

                def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))

                fileName = "打板_${defaultConfig.versionName}_${createTime}.apk"

                def filePath = "E:/app/bondex"
                File file = new File(filePath)
                if (!file.exists()) {
                    file.mkdirs()
                }
                variant.getPackageApplicationProvider().get().outputDirectory = new File("$filePath")
                outputFileName = fileName
            }
        }
    }



}

    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/releases"
        }
    }
    dependencies {
        def depend = config.appdependecies
        implementation project(':databaselibrary')
        implementation project(':liblibrary')
        implementation project(':styleibrary')
        implementation project(':fileprovider')
        implementation project(':convenientbanner')
        implementation project(':zxing-android')
        implementation project(':refresh-layout')
        //    butterknife
        implementation 'com.android.support.constraint:constraint-layout:1.1.3'
        annotationProcessor depend.butterKnifeCompiler
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
        implementation 'android.arch.lifecycle:extensions:1.1.1'
        //    64k
        implementation 'com.android.support:multidex:1.0.1'
        implementation files('libs/BaiduLBS_Android.jar')
        implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
        implementation 'com.tencent.bugly:nativecrashreport:latest.release'
        //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
//hofix
        implementation 'com.aliyun.ams:alicloud-android-hotfix:3.2.8'

    }
